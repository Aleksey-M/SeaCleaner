// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SeaCleaner.Server.Data;

namespace SeaCleaner.Server.Migrations
{
    [DbContext(typeof(GameDbContext))]
    partial class GameDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6");

            modelBuilder.Entity("SeaCleaner.Server.Model.GameResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("GameDate")
                        .HasColumnType("TEXT");

                    b.Property<long>("GameDuration")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("GamerId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsVictory")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SavedDolphins")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GamerId");

                    b.ToTable("GameResults");
                });

            modelBuilder.Entity("SeaCleaner.Server.Model.Gamer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Gamers");
                });

            modelBuilder.Entity("SeaCleaner.Server.Model.GameResult", b =>
                {
                    b.HasOne("SeaCleaner.Server.Model.Gamer", "Gamer")
                        .WithMany("GameResults")
                        .HasForeignKey("GamerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
